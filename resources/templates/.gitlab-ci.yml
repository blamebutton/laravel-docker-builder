.docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        TAG=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        TAG=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker pull "$CI_REGISTRY_IMAGE/${NAME}${TAG}" || true
    - docker build --pull -f .docker/${NAME}.dockerfile --cache-from "$CI_REGISTRY_IMAGE/${NAME}${TAG}" -t "$CI_REGISTRY_IMAGE/${NAME}${TAG}" .
    - docker push "$CI_REGISTRY_IMAGE/${NAME}${TAG}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - .docker/$NAME.dockerfile

docker-build-nginx:
  extends: .docker-build
  variables:
    NAME: nginx

docker-build-php:
  extends: .docker-build
  variables:
    NAME: php

docker-build-ssr:
  extends: .docker-build
  variables:
    NAME: ssr
