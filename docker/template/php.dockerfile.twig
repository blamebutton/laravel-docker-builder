# Composer installation
FROM php:{{ php_version }}-fpm-alpine AS composer
WORKDIR /app

## install composer dependencies
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
RUN install-php-extensions @composer
COPY / /app
RUN composer install --optimize-autoloader --no-dev

{# import node partial, exposed as "node" layer #}
{% include 'partials/node.dockerfile.twig' %}

# build php-fpm image
FROM php:{{ php_version }}-fpm-alpine
WORKDIR /app

# install required extensions
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
RUN install-php-extensions {{ php_extensions|join(' ') }}

# copy application source code
COPY / /app

{# import node-copy-assets partial, copy assets from node layer #}
{% include 'partials/node-copy-assets.dockerfile.twig' %}

# copy dependencies from composer installation step
COPY --from=composer /app/vendor/ /app/vendor/

# make storage writable for application
RUN chown --recursive www-data:www-data /app/storage

{% if artisan_optimize %}
# optimize application before start
RUN echo "php artisan optimize --no-ansi && php-fpm" >> /usr/bin/entrypoint.sh && \
    chmod +x /usr/bin/entrypoint.sh
{% else %}
# add entrypoint
RUN echo "php-fpm" >> /usr/bin/entrypoint.sh && \
    chmod +x /usr/bin/entrypoint.sh
{% endif %}

CMD ["/usr/bin/entrypoint.sh"]
